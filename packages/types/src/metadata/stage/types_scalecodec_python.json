{
    "runtime_id": 66,
    "versioning": [
        {
            "runtime_range": [
                1,
                null
            ],
            "types": {
                "String": "Text",
                "FixedU128": "u128",
                "U256": "u256",
                "Sr25519Public": "[u8; 32]",
                "SessionKeys2": "(Sr25519Public, Sr25519Public)",
                "SessionKeys3": "(Sr25519Public, Sr25519Public, Sr25519Public)",
                "Address": "AccountIdAddress",
                "Amount": "i128",
                "AmountOf": "Amount",
                "AssetId32": "[u8; 32]",
                "AssetId": "AssetId32",
                "AssetIdOf": "AssetId",
                "AssetInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "asset_id",
                            "AssetId"
                        ],
                        [
                            "symbol",
                            "AssetSymbolStr"
                        ],
                        [
                            "name",
                            "AssetNameStr"
                        ],
                        [
                            "precision",
                            "u8"
                        ],
                        [
                            "is_mintable",
                            "bool"
                        ]
                    ]
                },
                "AssetKind": {
                    "type": "enum",
                    "value_list": [
                        "Thischain",
                        "Sidechain",
                        "SidechainOwned"
                    ]
                },
                "AssetName": "Vec<u8>",
                "AssetNameStr": "String",
                "AssetRecord": "Null",
                "AssetSymbol": "Vec<u8>",
                "AssetSymbolStr": "String",
                "Balance": "u128",
                "BalanceInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "balance",
                            "Balance"
                        ]
                    ]
                },
                "BalancePrecision": "u8",
                "BasisPoints": "u16",
                "NetworkId": "BridgeNetworkId",
                "BridgeNetworkId": "u32",
                "BridgeStatus": {
                    "type": "enum",
                    "value_list": [
                        "Initialized",
                        "Migrating"
                    ]
                },
                "BridgeTimepoint": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "height",
                            "MultiChainHeight"
                        ],
                        [
                            "index",
                            "u32"
                        ]
                    ]
                },
                "ChangePeersContract": {
                    "type": "enum",
                    "value_list": [
                        "XOR",
                        "VAL"
                    ]
                },
                "ChargeFeeInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "tip",
                            "Compact<Balance>"
                        ],
                        [
                            "target_asset_id",
                            "AssetId"
                        ]
                    ]
                },
                "ContentSource": "Text",
                "ContributionInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "funds_contributed",
                            "Balance"
                        ],
                        [
                            "tokens_bought",
                            "Balance"
                        ],
                        [
                            "tokens_claimed",
                            "Balance"
                        ],
                        [
                            "claiming_finished",
                            "bool"
                        ],
                        [
                            "number_of_claims",
                            "u32"
                        ]
                    ]
                },
                "CurrencyId": "AssetId",
                "CurrencyIdEncoded": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "AssetId",
                            "H256"
                        ],
                        [
                            "TokenAddress",
                            "H160"
                        ]
                    ]
                },
                "CurrencyIdOf": "AssetId",
                "CustomInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "amount",
                            "Balance"
                        ]
                    ]
                },
                "DEXId": "u32",
                "DEXIdOf": "DEXId",
                "DEXInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "base_asset_id",
                            "AssetId"
                        ],
                        [
                            "default_fee",
                            "BasisPoints"
                        ],
                        [
                            "default_protocol_fee",
                            "BasisPoints"
                        ]
                    ]
                },
                "Description": "Text",
                "DispatchErrorWithPostInfoTPostDispatchInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "post_info",
                            "PostDispatchInfo"
                        ],
                        [
                            "error",
                            "DispatchError"
                        ]
                    ]
                },
                "DispatchResultWithPostInfo": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Ok",
                            "PostDispatchInfo"
                        ],
                        [
                            "Err",
                            "DispatchErrorWithPostInfoTPostDispatchInfo"
                        ]
                    ]
                },
                "DistributionAccounts": "Null",
                "Duration": "Null",
                "EthBridgeStorageVersion": {
                    "type": "enum",
                    "value_list": [
                        "V1",
                        "V2RemovePendingTransfers"
                    ]
                },
                "EthPeersSync": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "is_bridge_ready",
                            "bool"
                        ],
                        [
                            "is_xor_ready",
                            "bool"
                        ],
                        [
                            "is_val_ready",
                            "bool"
                        ]
                    ]
                },
                "Farm": "Null",
                "FarmId": "u64",
                "Farmer": "Null",
                "FilterMode": {
                    "type": "enum",
                    "value_list": [
                        "Disabled",
                        "ForbidSelected",
                        "AllowSelected"
                    ]
                },
                "Fixed": "FixedU128",
                "FixedBytes": "Vec<u8>",
                "HolderId": "AccountId",
                "ILOInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "ilo_organizer",
                            "AccountId"
                        ],
                        [
                            "tokens_for_ilo",
                            "Balance"
                        ],
                        [
                            "tokens_for_liquidity",
                            "Balance"
                        ],
                        [
                            "ilo_price",
                            "Balance"
                        ],
                        [
                            "soft_cap",
                            "Balance"
                        ],
                        [
                            "hard_cap",
                            "Balance"
                        ],
                        [
                            "min_contribution",
                            "Balance"
                        ],
                        [
                            "max_contribution",
                            "Balance"
                        ],
                        [
                            "refund_type",
                            "bool"
                        ],
                        [
                            "liquidity_percent",
                            "Balance"
                        ],
                        [
                            "listing_price",
                            "Balance"
                        ],
                        [
                            "lockup_days",
                            "u32"
                        ],
                        [
                            "start_block",
                            "BlockNumber"
                        ],
                        [
                            "end_block",
                            "BlockNumber"
                        ],
                        [
                            "token_vesting",
                            "VestingInfo"
                        ],
                        [
                            "sold_tokens",
                            "Balance"
                        ],
                        [
                            "funds_raised",
                            "Balance"
                        ],
                        [
                            "succeeded",
                            "bool"
                        ],
                        [
                            "failed",
                            "bool"
                        ],
                        [
                            "lp_tokens",
                            "Balance"
                        ],
                        [
                            "claimed_lp_tokens",
                            "bool"
                        ],
                        [
                            "finish_block",
                            "BlockNumber"
                        ]
                    ]
                },
                "IncomingAddToken": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "token_address",
                            "EthereumAddress"
                        ],
                        [
                            "asset_id",
                            "AssetId"
                        ],
                        [
                            "precision",
                            "BalancePrecision"
                        ],
                        [
                            "symbol",
                            "AssetSymbol"
                        ],
                        [
                            "name",
                            "AssetName"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingCancelOutgoingRequest": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "outgoing_request",
                            "OutgoingRequest"
                        ],
                        [
                            "outgoing_request_hash",
                            "H256"
                        ],
                        [
                            "initial_request_hash",
                            "H256"
                        ],
                        [
                            "tx_input",
                            "Vec<u8>"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingChangePeers": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthereumAddress"
                        ],
                        [
                            "added",
                            "bool"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingChangePeersCompat": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthereumAddress"
                        ],
                        [
                            "added",
                            "bool"
                        ],
                        [
                            "contract",
                            "ChangePeersContract"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingMarkAsDoneRequest": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "outgoing_request_hash",
                            "H256"
                        ],
                        [
                            "initial_request_hash",
                            "H256"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingMetaRequestKind": {
                    "type": "enum",
                    "value_list": [
                        "CancelOutgoingRequest",
                        "MarkAsDone"
                    ]
                },
                "IncomingMigrate": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "new_contract_address",
                            "EthereumAddress"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingPrepareForMigration": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingRequest": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Transfer",
                            "IncomingTransfer"
                        ],
                        [
                            "AddToken",
                            "IncomingAddToken"
                        ],
                        [
                            "ChangePeers",
                            "IncomingChangePeers"
                        ],
                        [
                            "CancelOutgoingRequest",
                            "IncomingCancelOutgoingRequest"
                        ],
                        [
                            "MarkAsDone",
                            "IncomingMarkAsDoneRequest"
                        ],
                        [
                            "PrepareForMigration",
                            "IncomingPrepareForMigration"
                        ],
                        [
                            "Migrate",
                            "IncomingMigrate"
                        ]
                    ]
                },
                "IncomingRequestKind": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Transaction",
                            "IncomingTransactionRequestKind"
                        ],
                        [
                            "Meta",
                            "IncomingMetaRequestKind"
                        ]
                    ]
                },
                "IncomingTransactionRequestKind": {
                    "type": "enum",
                    "value_list": [
                        "Transfer",
                        "AddAsset",
                        "AddPeer",
                        "RemovePeer",
                        "PrepareForMigration",
                        "Migrate",
                        "AddPeerCompat",
                        "RemovePeerCompat",
                        "TransferXOR"
                    ]
                },
                "IncomingTransfer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "from",
                            "EthereumAddress"
                        ],
                        [
                            "to",
                            "AccountId"
                        ],
                        [
                            "asset_id",
                            "AssetId"
                        ],
                        [
                            "asset_kind",
                            "AssetKind"
                        ],
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "Keys": "SessionKeys3",
                "LPRewardsInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "currency",
                            "AssetId"
                        ],
                        [
                            "reason",
                            "RewardReason"
                        ]
                    ]
                },
                "LPSwapOutcomeInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "fee",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "Vec<LPRewardsInfo>"
                        ],
                        [
                            "amount_without_impact",
                            "Balance"
                        ]
                    ]
                },
                "LiquiditySourceType": {
                    "type": "enum",
                    "value_list": [
                        "XYKPool",
                        "BondingCurvePool",
                        "MulticollateralBondingCurvePool",
                        "MockPool",
                        "MockPool2",
                        "MockPool3",
                        "MockPool4",
                        "XSTPool"
                    ]
                },
                "LoadIncomingMetaRequest": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "hash",
                            "H256"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "kind",
                            "IncomingMetaRequestKind"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "LoadIncomingRequest": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Transaction",
                            "LoadIncomingTransactionRequest"
                        ],
                        [
                            "Meta",
                            "(LoadIncomingMetaRequest, H256)"
                        ]
                    ]
                },
                "LoadIncomingTransactionRequest": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "hash",
                            "H256"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "kind",
                            "IncomingTransactionRequestKind"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "LockInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "pool_tokens",
                            "Balance"
                        ],
                        [
                            "unlocking_block",
                            "BlockNumber"
                        ],
                        [
                            "asset_a",
                            "AssetId"
                        ],
                        [
                            "asset_b",
                            "AssetId"
                        ]
                    ]
                },
                "LookupSource": "AccountId",
                "MarketMakerInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "count",
                            "u32"
                        ],
                        [
                            "volume",
                            "Balance"
                        ]
                    ]
                },
                "Mode": {
                    "type": "enum",
                    "value_list": [
                        "Permit",
                        "Forbid"
                    ]
                },
                "MultiChainHeight": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Thischain",
                            "BlockNumber"
                        ],
                        [
                            "Sidechain",
                            "u64"
                        ]
                    ]
                },
                "MultiCurrencyBalance": "Balance",
                "MultiCurrencyBalanceOf": "MultiCurrencyBalance",
                "MultisigAccount": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "signatories",
                            "Vec<AccountId>"
                        ],
                        [
                            "threshold",
                            "u8"
                        ]
                    ]
                },
                "OffchainRequest": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Outgoing",
                            "(OutgoingRequest, H256)"
                        ],
                        [
                            "LoadIncoming",
                            "LoadIncomingRequest"
                        ],
                        [
                            "Incoming",
                            "(IncomingRequest, H256)"
                        ]
                    ]
                },
                "OracleKey": "AssetId",
                "OutgoingAddAsset": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "asset_id",
                            "AssetId"
                        ],
                        [
                            "supply",
                            "Balance"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingAddAssetEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "name",
                            "String"
                        ],
                        [
                            "symbol",
                            "String"
                        ],
                        [
                            "decimal",
                            "u8"
                        ],
                        [
                            "supply",
                            "U256"
                        ],
                        [
                            "sidechain_asset_id",
                            "FixedBytes"
                        ],
                        [
                            "hash",
                            "H256"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingAddPeer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthereumAddress"
                        ],
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingAddPeerCompat": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthereumAddress"
                        ],
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingAddPeerEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peer_address",
                            "EthereumAddress"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingAddToken": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "token_address",
                            "EthereumAddress"
                        ],
                        [
                            "ticker",
                            "String"
                        ],
                        [
                            "name",
                            "String"
                        ],
                        [
                            "decimals",
                            "u8"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingAddTokenEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "token_address",
                            "EthereumAddress"
                        ],
                        [
                            "ticker",
                            "String"
                        ],
                        [
                            "name",
                            "String"
                        ],
                        [
                            "decimals",
                            "u8"
                        ],
                        [
                            "hash",
                            "H256"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingMigrate": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "new_contract_address",
                            "EthereumAddress"
                        ],
                        [
                            "erc20_native_tokens",
                            "Vec<EthereumAddress>"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingMigrateEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "this_contract_address",
                            "EthereumAddress"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "new_contract_address",
                            "EthereumAddress"
                        ],
                        [
                            "erc20_native_tokens",
                            "Vec<EthereumAddress>"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingPrepareForMigration": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingPrepareForMigrationEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "this_contract_address",
                            "EthereumAddress"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingRemovePeer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthereumAddress"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingRemovePeerCompat": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthereumAddress"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingRemovePeerEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peer_address",
                            "EthereumAddress"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingRequest": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Transfer",
                            "OutgoingTransfer"
                        ],
                        [
                            "AddAsset",
                            "OutgoingAddAsset"
                        ],
                        [
                            "AddToken",
                            "OutgoingAddToken"
                        ],
                        [
                            "AddPeer",
                            "OutgoingAddPeer"
                        ],
                        [
                            "RemovePeer",
                            "OutgoingRemovePeer"
                        ],
                        [
                            "PrepareForMigration",
                            "OutgoingPrepareForMigration"
                        ],
                        [
                            "Migrate",
                            "OutgoingMigrate"
                        ]
                    ]
                },
                "OutgoingRequestEncoded": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Transfer",
                            "OutgoingTransferEncoded"
                        ],
                        [
                            "AddAsset",
                            "OutgoingAddAssetEncoded"
                        ],
                        [
                            "AddToken",
                            "OutgoingAddTokenEncoded"
                        ],
                        [
                            "AddPeer",
                            "OutgoingAddPeerEncoded"
                        ],
                        [
                            "RemovePeer",
                            "OutgoingRemovePeerEncoded"
                        ],
                        [
                            "PrepareForMigration",
                            "OutgoingPrepareForMigrationEncoded"
                        ],
                        [
                            "Migrate",
                            "OutgoingMigrateEncoded"
                        ]
                    ]
                },
                "OutgoingTransfer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "from",
                            "AccountId"
                        ],
                        [
                            "to",
                            "EthereumAddress"
                        ],
                        [
                            "asset_id",
                            "AssetId"
                        ],
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingTransferEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "currency_id",
                            "CurrencyIdEncoded"
                        ],
                        [
                            "amount",
                            "U256"
                        ],
                        [
                            "to",
                            "EthereumAddress"
                        ],
                        [
                            "from",
                            "EthereumAddress"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OwnerId": "AccountId",
                "PendingMultisigAccount": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "approving_accounts",
                            "Vec<AccountId>"
                        ],
                        [
                            "migrate_at",
                            "Option<BlockNumber>"
                        ]
                    ]
                },
                "Permission": "Null",
                "PermissionId": "u32",
                "PollInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "number_of_options",
                            "u32"
                        ],
                        [
                            "poll_start_block",
                            "BlockNumber"
                        ],
                        [
                            "poll_end_block",
                            "BlockNumber"
                        ]
                    ]
                },
                "PoolFarmer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "account",
                            "AccountId"
                        ],
                        [
                            "block",
                            "BlockNumber"
                        ],
                        [
                            "weight",
                            "Balance"
                        ]
                    ]
                },
                "PostDispatchInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "actual_weight",
                            "Option<Weight>"
                        ],
                        [
                            "pays_fee",
                            "Pays"
                        ]
                    ]
                },
                "PredefinedAssetId": {
                    "type": "enum",
                    "value_list": [
                        "XOR",
                        "DOT",
                        "KSM",
                        "USDT",
                        "VAL",
                        "PSWAP",
                        "DAI",
                        "ETH",
                        "XSTUSD"
                    ]
                },
                "PriceInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "price_failures",
                            "u32"
                        ],
                        [
                            "spot_prices",
                            "Vec<Balance>"
                        ],
                        [
                            "average_price",
                            "Balance"
                        ],
                        [
                            "needs_update",
                            "bool"
                        ],
                        [
                            "last_spot_price",
                            "Balance"
                        ]
                    ]
                },
                "Public": "[u8; 33]",
                "QuoteAmount": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "WithDesiredInput",
                            "QuoteWithDesiredInput"
                        ],
                        [
                            "WithDesiredOutput",
                            "QuoteWithDesiredOutput"
                        ]
                    ]
                },
                "QuoteWithDesiredInput": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "desired_amount_in",
                            "Balance"
                        ]
                    ]
                },
                "QuoteWithDesiredOutput": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "desired_amount_out",
                            "Balance"
                        ]
                    ]
                },
                "RefCount": "u32",
                "RequestStatus": {
                    "type": "enum",
                    "value_list": [
                        "Pending",
                        "Frozen",
                        "ApprovalsReady",
                        "Failed",
                        "Done"
                    ]
                },
                "RewardInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "limit",
                            "Balance"
                        ],
                        [
                            "total_available",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "BTreeMap<RewardReason, Balance>"
                        ]
                    ]
                },
                "RewardReason": {
                    "type": "enum",
                    "value_list": [
                        "Unspecified",
                        "BuyOnBondingCurve",
                        "LiquidityProvisionFarming",
                        "MarketMakerVolume"
                    ]
                },
                "Scope": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Limited",
                            "H512"
                        ],
                        [
                            "Unlimited",
                            "Null"
                        ]
                    ]
                },
                "SignatureParams": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "r",
                            "[u8; 32]"
                        ],
                        [
                            "s",
                            "[u8; 32]"
                        ],
                        [
                            "v",
                            "u8"
                        ]
                    ]
                },
                "SmoothPriceState": "Null",
                "StakingInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "deposited",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "Balance"
                        ]
                    ]
                },
                "StorageVersion": "Null",
                "SwapAction": "Null",
                "SwapAmount": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "WithDesiredInput",
                            "SwapWithDesiredInput"
                        ],
                        [
                            "WithDesiredOutput",
                            "SwapWithDesiredOutput"
                        ]
                    ]
                },
                "SwapOutcome": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "fee",
                            "Balance"
                        ]
                    ]
                },
                "SwapOutcomeInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "fee",
                            "Balance"
                        ]
                    ]
                },
                "SwapVariant": {
                    "type": "enum",
                    "value_list": [
                        "WithDesiredInput",
                        "WithDesiredOutput"
                    ]
                },
                "SwapWithDesiredInput": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "desired_amount_in",
                            "Balance"
                        ],
                        [
                            "min_amount_out",
                            "Balance"
                        ]
                    ]
                },
                "SwapWithDesiredOutput": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "desired_amount_out",
                            "Balance"
                        ],
                        [
                            "max_amount_in",
                            "Balance"
                        ]
                    ]
                },
                "TAssetBalance": "Balance",
                "TP": "TradingPair",
                "TechAccountId": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Pure",
                            "(DEXId, TechPurpose)"
                        ],
                        [
                            "Generic",
                            "(Vec<u8>, Vec<u8>)"
                        ],
                        [
                            "Wrapped",
                            "AccountId"
                        ],
                        [
                            "WrappedRepr",
                            "AccountId"
                        ]
                    ]
                },
                "TechAmount": "Amount",
                "TechAssetId": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Wrapped",
                            "PredefinedAssetId"
                        ],
                        [
                            "Escaped",
                            "AssetId"
                        ]
                    ]
                },
                "TechBalance": "Balance",
                "TechPurpose": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "FeeCollector",
                            "Null"
                        ],
                        [
                            "FeeCollectorForPair",
                            "TechTradingPair"
                        ],
                        [
                            "LiquidityKeeper",
                            "TechTradingPair"
                        ],
                        [
                            "Identifier",
                            "Vec<u8>"
                        ]
                    ]
                },
                "TechTradingPair": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "base_asset_id",
                            "TechAssetId"
                        ],
                        [
                            "target_asset_id",
                            "TechAssetId"
                        ]
                    ]
                },
                "TokenLockInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "tokens",
                            "Balance"
                        ],
                        [
                            "unlocking_block",
                            "BlockNumber"
                        ],
                        [
                            "asset_id",
                            "AssetId"
                        ]
                    ]
                },
                "TradingPair": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "base_asset_id",
                            "AssetId"
                        ],
                        [
                            "target_asset_id",
                            "AssetId"
                        ]
                    ]
                },
                "ValidationFunction": "Null",
                "BTreeMap<RewardReason,Balance>": "Vec<(RewardReason,Balance)>",
                "BTreeSet<SignatureParams>": "Vec<SignatureParams>",
                "BTreeSet<H256>": "Vec<H256>",
                "BTreeSet<AssetId>": "Vec<AssetId>",
                "BTreeSet<AssetIdOf>": "Vec<AssetIdOf>",
                "BTreeSet<AccountId>": "Vec<AccountId>",
                "BTreeSet<LiquiditySourceType>": "Vec<LiquiditySourceType>",
                "ecdsa::Public": "[u8; 33]",
                "Result<IncomingRequest, DispatchError>": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Ok",
                            "IncomingRequest"
                        ],
                        [
                            "Err",
                            "DispatchError"
                        ]
                    ]
                },
                "VotingInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "voting_option",
                            "u32"
                        ],
                        [
                            "number_of_votes",
                            "Balance"
                        ],
                        [
                            "ceres_withdrawn",
                            "bool"
                        ]
                    ]
                }
            }
        },
        {
            "runtime_range": [
                33,
                null
            ],
            "types": {
                "ContributorsVesting": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "first_release_percent",
                            "Balance"
                        ],
                        [
                            "vesting_period",
                            "BlockNumber"
                        ],
                        [
                            "vesting_percent",
                            "Balance"
                        ]
                    ]
                },
                "CrowdloanLease": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "start_block",
                            "String"
                        ],
                        [
                            "total_days",
                            "String"
                        ],
                        [
                            "blocks_per_day",
                            "String"
                        ]
                    ]
                },
                "CrowdloanReward": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "id",
                            "Vec<u8>"
                        ],
                        [
                            "address",
                            "Vec<u8>"
                        ],
                        [
                            "contribution",
                            "Fixed"
                        ],
                        [
                            "xor_reward",
                            "Fixed"
                        ],
                        [
                            "val_reward",
                            "Fixed"
                        ],
                        [
                            "pswap_reward",
                            "Fixed"
                        ],
                        [
                            "xstusd_reward",
                            "Fixed"
                        ],
                        [
                            "percent",
                            "Fixed"
                        ]
                    ]
                },
                "EthAddress": "H160",
                "ILOInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "ilo_organizer",
                            "AccountId"
                        ],
                        [
                            "tokens_for_ilo",
                            "Balance"
                        ],
                        [
                            "tokens_for_liquidity",
                            "Balance"
                        ],
                        [
                            "ilo_price",
                            "Balance"
                        ],
                        [
                            "soft_cap",
                            "Balance"
                        ],
                        [
                            "hard_cap",
                            "Balance"
                        ],
                        [
                            "min_contribution",
                            "Balance"
                        ],
                        [
                            "max_contribution",
                            "Balance"
                        ],
                        [
                            "refund_type",
                            "bool"
                        ],
                        [
                            "liquidity_percent",
                            "Balance"
                        ],
                        [
                            "listing_price",
                            "Balance"
                        ],
                        [
                            "lockup_days",
                            "u32"
                        ],
                        [
                            "start_block",
                            "BlockNumber"
                        ],
                        [
                            "end_block",
                            "BlockNumber"
                        ],
                        [
                            "contributors_vesting",
                            "ContributorsVesting"
                        ],
                        [
                            "team_vesting",
                            "TeamVesting"
                        ],
                        [
                            "sold_tokens",
                            "Balance"
                        ],
                        [
                            "funds_raised",
                            "Balance"
                        ],
                        [
                            "succeeded",
                            "bool"
                        ],
                        [
                            "failed",
                            "bool"
                        ],
                        [
                            "lp_tokens",
                            "Balance"
                        ],
                        [
                            "claimed_lp_tokens",
                            "bool"
                        ],
                        [
                            "finish_block",
                            "BlockNumber"
                        ]
                    ]
                },
                "IncomingAddToken": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "token_address",
                            "EthAddress"
                        ],
                        [
                            "asset_id",
                            "AssetId"
                        ],
                        [
                            "precision",
                            "BalancePrecision"
                        ],
                        [
                            "symbol",
                            "AssetSymbol"
                        ],
                        [
                            "name",
                            "AssetName"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingChangePeers": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthAddress"
                        ],
                        [
                            "added",
                            "bool"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingChangePeersCompat": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthAddress"
                        ],
                        [
                            "added",
                            "bool"
                        ],
                        [
                            "contract",
                            "ChangePeersContract"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingMigrate": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "new_contract_address",
                            "EthAddress"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingTransfer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "from",
                            "EthAddress"
                        ],
                        [
                            "to",
                            "AccountId"
                        ],
                        [
                            "asset_id",
                            "AssetId"
                        ],
                        [
                            "asset_kind",
                            "AssetKind"
                        ],
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "at_height",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "OutgoingAddPeer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthAddress"
                        ],
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingAddPeerCompat": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthAddress"
                        ],
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingAddPeerEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peer_address",
                            "EthAddress"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingAddToken": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "token_address",
                            "EthAddress"
                        ],
                        [
                            "ticker",
                            "String"
                        ],
                        [
                            "name",
                            "String"
                        ],
                        [
                            "decimals",
                            "u8"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingAddTokenEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "token_address",
                            "EthAddress"
                        ],
                        [
                            "ticker",
                            "String"
                        ],
                        [
                            "name",
                            "String"
                        ],
                        [
                            "decimals",
                            "u8"
                        ],
                        [
                            "hash",
                            "H256"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingMigrate": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "new_contract_address",
                            "EthAddress"
                        ],
                        [
                            "erc20_native_tokens",
                            "Vec<EthAddress>"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingMigrateEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "this_contract_address",
                            "EthAddress"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "new_contract_address",
                            "EthAddress"
                        ],
                        [
                            "erc20_native_tokens",
                            "Vec<EthAddress>"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingPrepareForMigrationEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "this_contract_address",
                            "EthAddress"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingRemovePeer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthAddress"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingRemovePeerCompat": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peer_account_id",
                            "AccountId"
                        ],
                        [
                            "peer_address",
                            "EthAddress"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingRemovePeerEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peer_address",
                            "EthAddress"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingTransfer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "from",
                            "AccountId"
                        ],
                        [
                            "to",
                            "EthAddress"
                        ],
                        [
                            "asset_id",
                            "AssetId"
                        ],
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "network_id",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingTransferEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "currency_id",
                            "CurrencyIdEncoded"
                        ],
                        [
                            "amount",
                            "U256"
                        ],
                        [
                            "to",
                            "EthAddress"
                        ],
                        [
                            "from",
                            "EthAddress"
                        ],
                        [
                            "tx_hash",
                            "H256"
                        ],
                        [
                            "network_id",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "PoolData": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "multiplier",
                            "u32"
                        ],
                        [
                            "deposit_fee",
                            "Balance"
                        ],
                        [
                            "is_core",
                            "bool"
                        ],
                        [
                            "is_farm",
                            "bool"
                        ],
                        [
                            "total_tokens_in_pool",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "Balance"
                        ],
                        [
                            "rewards_to_be_distributed",
                            "Balance"
                        ],
                        [
                            "is_removed",
                            "bool"
                        ]
                    ]
                },
                "TeamVesting": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "team_vesting_total_tokens",
                            "Balance"
                        ],
                        [
                            "team_vesting_first_release_percent",
                            "Balance"
                        ],
                        [
                            "team_vesting_period",
                            "BlockNumber"
                        ],
                        [
                            "team_vesting_percent",
                            "Balance"
                        ]
                    ]
                },
                "TokenInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "farms_total_multiplier",
                            "u32"
                        ],
                        [
                            "staking_total_multiplier",
                            "u32"
                        ],
                        [
                            "token_per_block",
                            "Balance"
                        ],
                        [
                            "farms_allocation",
                            "Balance"
                        ],
                        [
                            "staking_allocation",
                            "Balance"
                        ],
                        [
                            "team_allocation",
                            "Balance"
                        ],
                        [
                            "team_account",
                            "AccountId"
                        ]
                    ]
                },
                "UserInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "pool_asset",
                            "AssetId"
                        ],
                        [
                            "reward_asset",
                            "AssetId"
                        ],
                        [
                            "is_farm",
                            "bool"
                        ],
                        [
                            "pooled_tokens",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "Balance"
                        ]
                    ]
                }
            }
        },
        {
            "runtime_range": [
                35,
                null
            ],
            "types": {
                "LiquiditySourceIdOf": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "dex_id",
                            "DEXId"
                        ],
                        [
                            "liquidity_source_index",
                            "LiquiditySourceType"
                        ]
                    ]
                }
            }
        },
        {
            "runtime_range": [
                37,
                null
            ],
            "types": {
                "ContributorsVesting": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "first_release_percent",
                            "Balance"
                        ],
                        [
                            "vesting_period",
                            "Moment"
                        ],
                        [
                            "vesting_percent",
                            "Balance"
                        ]
                    ]
                },
                "ILOInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "ilo_organizer",
                            "AccountId"
                        ],
                        [
                            "tokens_for_ilo",
                            "Balance"
                        ],
                        [
                            "tokens_for_liquidity",
                            "Balance"
                        ],
                        [
                            "ilo_price",
                            "Balance"
                        ],
                        [
                            "soft_cap",
                            "Balance"
                        ],
                        [
                            "hard_cap",
                            "Balance"
                        ],
                        [
                            "min_contribution",
                            "Balance"
                        ],
                        [
                            "max_contribution",
                            "Balance"
                        ],
                        [
                            "refund_type",
                            "bool"
                        ],
                        [
                            "liquidity_percent",
                            "Balance"
                        ],
                        [
                            "listing_price",
                            "Balance"
                        ],
                        [
                            "lockup_days",
                            "u32"
                        ],
                        [
                            "start_timestamp",
                            "Moment"
                        ],
                        [
                            "end_timestamp",
                            "Moment"
                        ],
                        [
                            "contributors_vesting",
                            "ContributorsVesting"
                        ],
                        [
                            "team_vesting",
                            "TeamVesting"
                        ],
                        [
                            "sold_tokens",
                            "Balance"
                        ],
                        [
                            "funds_raised",
                            "Balance"
                        ],
                        [
                            "succeeded",
                            "bool"
                        ],
                        [
                            "failed",
                            "bool"
                        ],
                        [
                            "lp_tokens",
                            "Balance"
                        ],
                        [
                            "claimed_lp_tokens",
                            "bool"
                        ],
                        [
                            "finish_timestamp",
                            "Moment"
                        ]
                    ]
                },
                "LockInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "pool_tokens",
                            "Balance"
                        ],
                        [
                            "unlocking_timestamp",
                            "Moment"
                        ],
                        [
                            "asset_a",
                            "AssetId"
                        ],
                        [
                            "asset_b",
                            "AssetId"
                        ]
                    ]
                },
                "PollInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "number_of_options",
                            "u32"
                        ],
                        [
                            "poll_start_timestamp",
                            "Moment"
                        ],
                        [
                            "poll_end_timestamp",
                            "Moment"
                        ]
                    ]
                },
                "TeamVesting": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "team_vesting_total_tokens",
                            "Balance"
                        ],
                        [
                            "team_vesting_first_release_percent",
                            "Balance"
                        ],
                        [
                            "team_vesting_period",
                            "Moment"
                        ],
                        [
                            "team_vesting_percent",
                            "Balance"
                        ]
                    ]
                },
                "TokenLockInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "tokens",
                            "Balance"
                        ],
                        [
                            "unlocking_timestamp",
                            "Moment"
                        ],
                        [
                            "asset_id",
                            "AssetId"
                        ]
                    ]
                }
            }
        },
        {
            "runtime_range": [
                42,
                null
            ],
            "types": {
                "AssetInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "assetId",
                            "AssetId"
                        ],
                        [
                            "symbol",
                            "AssetSymbolStr"
                        ],
                        [
                            "name",
                            "AssetNameStr"
                        ],
                        [
                            "precision",
                            "u8"
                        ],
                        [
                            "isMintable",
                            "bool"
                        ]
                    ]
                },
                "AssetName": "Text",
                "AssetSymbol": "Text",
                "AuxiliaryDigest": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "logs",
                            "Vec<AuxiliaryDigestItem>"
                        ]
                    ]
                },
                "AuxiliaryDigestItem": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Commitment",
                            "(EthNetworkId, ChannelId, H256)"
                        ]
                    ]
                },
                "BasicChannelMessage": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "networkId",
                            "EthNetworkId"
                        ],
                        [
                            "target",
                            "H160"
                        ],
                        [
                            "nonce",
                            "u64"
                        ],
                        [
                            "payload",
                            "Vec<u8>"
                        ]
                    ]
                },
                "BridgeSignatureVersion": {
                    "type": "enum",
                    "value_list": [
                        "V1",
                        "V2"
                    ]
                },
                "ChannelId": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Basic",
                            null
                        ],
                        [
                            "Incentivized",
                            null
                        ]
                    ]
                },
                "ContributionInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "fundsContributed",
                            "Balance"
                        ],
                        [
                            "tokensBought",
                            "Balance"
                        ],
                        [
                            "tokensClaimed",
                            "Balance"
                        ],
                        [
                            "claimingFinished",
                            "bool"
                        ],
                        [
                            "numberOfClaims",
                            "u32"
                        ]
                    ]
                },
                "ContributorsVesting": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "firstReleasePercent",
                            "Balance"
                        ],
                        [
                            "vestingPeriod",
                            "Moment"
                        ],
                        [
                            "vestingPercent",
                            "Balance"
                        ]
                    ]
                },
                "CrowdloanLease": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "startBlock",
                            "String"
                        ],
                        [
                            "totalDays",
                            "String"
                        ],
                        [
                            "blocksPerDay",
                            "String"
                        ]
                    ]
                },
                "CrowdloanReward": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "id",
                            "Vec<u8>"
                        ],
                        [
                            "address",
                            "Vec<u8>"
                        ],
                        [
                            "contribution",
                            "Fixed"
                        ],
                        [
                            "xorReward",
                            "Fixed"
                        ],
                        [
                            "valReward",
                            "Fixed"
                        ],
                        [
                            "pswapReward",
                            "Fixed"
                        ],
                        [
                            "xstusdReward",
                            "Fixed"
                        ],
                        [
                            "percent",
                            "Fixed"
                        ]
                    ]
                },
                "DEXInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "baseAssetId",
                            "AssetId"
                        ],
                        [
                            "defaultFee",
                            "BasisPoints"
                        ],
                        [
                            "defaultProtocolFee",
                            "BasisPoints"
                        ]
                    ]
                },
                "DispatchErrorWithPostInfoTPostDispatchInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "postInfo",
                            "PostDispatchInfo"
                        ],
                        [
                            "error",
                            "DispatchError"
                        ]
                    ]
                },
                "EthNetworkId": "U256",
                "EthPeersSync": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "isBridgeReady",
                            "bool"
                        ],
                        [
                            "isXorReady",
                            "bool"
                        ],
                        [
                            "isValReady",
                            "bool"
                        ]
                    ]
                },
                "ILOInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "iloOrganizer",
                            "AccountId"
                        ],
                        [
                            "tokensForIlo",
                            "Balance"
                        ],
                        [
                            "tokensForLiquidity",
                            "Balance"
                        ],
                        [
                            "iloPrice",
                            "Balance"
                        ],
                        [
                            "softCap",
                            "Balance"
                        ],
                        [
                            "hardCap",
                            "Balance"
                        ],
                        [
                            "minContribution",
                            "Balance"
                        ],
                        [
                            "maxContribution",
                            "Balance"
                        ],
                        [
                            "refundType",
                            "bool"
                        ],
                        [
                            "liquidityPercent",
                            "Balance"
                        ],
                        [
                            "listingPrice",
                            "Balance"
                        ],
                        [
                            "lockupDays",
                            "u32"
                        ],
                        [
                            "startTimestamp",
                            "Moment"
                        ],
                        [
                            "endTimestamp",
                            "Moment"
                        ],
                        [
                            "contributorsVesting",
                            "ContributorsVesting"
                        ],
                        [
                            "teamVesting",
                            "TeamVesting"
                        ],
                        [
                            "soldTokens",
                            "Balance"
                        ],
                        [
                            "fundsRaised",
                            "Balance"
                        ],
                        [
                            "succeeded",
                            "bool"
                        ],
                        [
                            "failed",
                            "bool"
                        ],
                        [
                            "lpTokens",
                            "Balance"
                        ],
                        [
                            "claimedLpTokens",
                            "bool"
                        ],
                        [
                            "finishTimestamp",
                            "Moment"
                        ]
                    ]
                },
                "IncomingAddToken": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "tokenAddress",
                            "EthAddress"
                        ],
                        [
                            "assetId",
                            "AssetId"
                        ],
                        [
                            "precision",
                            "BalancePrecision"
                        ],
                        [
                            "symbol",
                            "AssetSymbol"
                        ],
                        [
                            "name",
                            "AssetName"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "atHeight",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingCancelOutgoingRequest": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "outgoingRequest",
                            "OutgoingRequest"
                        ],
                        [
                            "outgoingRequestHash",
                            "H256"
                        ],
                        [
                            "initialRequestHash",
                            "H256"
                        ],
                        [
                            "txInput",
                            "Vec<u8>"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "atHeight",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingChangePeers": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peerAccountId",
                            "AccountId"
                        ],
                        [
                            "peerAddress",
                            "EthAddress"
                        ],
                        [
                            "added",
                            "bool"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "atHeight",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingChangePeersCompat": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peerAccountId",
                            "AccountId"
                        ],
                        [
                            "peerAddress",
                            "EthAddress"
                        ],
                        [
                            "added",
                            "bool"
                        ],
                        [
                            "contract",
                            "ChangePeersContract"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "atHeight",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingMarkAsDoneRequest": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "outgoingRequestHash",
                            "H256"
                        ],
                        [
                            "initialRequestHash",
                            "H256"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "atHeight",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingMigrate": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "newContractAddress",
                            "EthAddress"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "atHeight",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingPrepareForMigration": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "atHeight",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IncomingTransfer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "from",
                            "EthAddress"
                        ],
                        [
                            "to",
                            "AccountId"
                        ],
                        [
                            "assetId",
                            "AssetId"
                        ],
                        [
                            "assetKind",
                            "AssetKind"
                        ],
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "atHeight",
                            "u64"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "IntentivizedChannelMessage": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "networkId",
                            "EthNetworkId"
                        ],
                        [
                            "target",
                            "H160"
                        ],
                        [
                            "nonce",
                            "u64"
                        ],
                        [
                            "fee",
                            "U256"
                        ],
                        [
                            "payload",
                            "Vec<u8>"
                        ]
                    ]
                },
                "LPSwapOutcomeInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "fee",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "Vec<LPRewardsInfo>"
                        ]
                    ]
                },
                "LiquiditySourceIdOf": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "dexId",
                            "DEXId"
                        ],
                        [
                            "liquiditySourceIndex",
                            "LiquiditySourceType"
                        ]
                    ]
                },
                "LoadIncomingMetaRequest": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "hash",
                            "H256"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "kind",
                            "IncomingMetaRequestKind"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "LoadIncomingTransactionRequest": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "hash",
                            "H256"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ],
                        [
                            "kind",
                            "IncomingTransactionRequestKind"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ]
                    ]
                },
                "LockInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "poolTokens",
                            "Balance"
                        ],
                        [
                            "unlockingTimestamp",
                            "Moment"
                        ],
                        [
                            "assetA",
                            "AssetId"
                        ],
                        [
                            "assetB",
                            "AssetId"
                        ]
                    ]
                },
                "OutgoingAddAsset": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "assetId",
                            "AssetId"
                        ],
                        [
                            "supply",
                            "Balance"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingAddAssetEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "name",
                            "String"
                        ],
                        [
                            "symbol",
                            "String"
                        ],
                        [
                            "decimal",
                            "u8"
                        ],
                        [
                            "supply",
                            "U256"
                        ],
                        [
                            "sidechainAssetId",
                            "FixedBytes"
                        ],
                        [
                            "hash",
                            "H256"
                        ],
                        [
                            "networkId",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingAddPeer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peerAddress",
                            "EthAddress"
                        ],
                        [
                            "peerAccountId",
                            "AccountId"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingAddPeerCompat": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peerAddress",
                            "EthAddress"
                        ],
                        [
                            "peerAccountId",
                            "AccountId"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingAddPeerEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peerAddress",
                            "EthAddress"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "networkId",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingAddToken": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "tokenAddress",
                            "EthAddress"
                        ],
                        [
                            "ticker",
                            "String"
                        ],
                        [
                            "name",
                            "String"
                        ],
                        [
                            "decimals",
                            "u8"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingAddTokenEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "tokenAddress",
                            "EthAddress"
                        ],
                        [
                            "ticker",
                            "String"
                        ],
                        [
                            "name",
                            "String"
                        ],
                        [
                            "decimals",
                            "u8"
                        ],
                        [
                            "hash",
                            "H256"
                        ],
                        [
                            "networkId",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingMigrate": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "newContractAddress",
                            "EthAddress"
                        ],
                        [
                            "erc20NativeTokens",
                            "Vec<EthAddress>"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingMigrateEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "thisContractAddress",
                            "EthAddress"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "newContractAddress",
                            "EthAddress"
                        ],
                        [
                            "erc20NativeTokens",
                            "Vec<EthAddress>"
                        ],
                        [
                            "networkId",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingPrepareForMigration": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingPrepareForMigrationEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "thisContractAddress",
                            "EthAddress"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "networkId",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingRemovePeer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peerAccountId",
                            "AccountId"
                        ],
                        [
                            "peerAddress",
                            "EthAddress"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingRemovePeerCompat": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "author",
                            "AccountId"
                        ],
                        [
                            "peerAccountId",
                            "AccountId"
                        ],
                        [
                            "peerAddress",
                            "EthAddress"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingRemovePeerEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "peerAddress",
                            "EthAddress"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "networkId",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "OutgoingTransfer": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "from",
                            "AccountId"
                        ],
                        [
                            "to",
                            "EthAddress"
                        ],
                        [
                            "assetId",
                            "AssetId"
                        ],
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "nonce",
                            "Index"
                        ],
                        [
                            "networkId",
                            "BridgeNetworkId"
                        ],
                        [
                            "timepoint",
                            "BridgeTimepoint"
                        ]
                    ]
                },
                "OutgoingTransferEncoded": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "currencyId",
                            "CurrencyIdEncoded"
                        ],
                        [
                            "amount",
                            "U256"
                        ],
                        [
                            "to",
                            "EthAddress"
                        ],
                        [
                            "from",
                            "EthAddress"
                        ],
                        [
                            "txHash",
                            "H256"
                        ],
                        [
                            "networkId",
                            "H256"
                        ],
                        [
                            "raw",
                            "Vec<u8>"
                        ]
                    ]
                },
                "PendingMultisigAccount": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "approvingAccounts",
                            "Vec<AccountId>"
                        ],
                        [
                            "migrateAt",
                            "Option<BlockNumber>"
                        ]
                    ]
                },
                "PollInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "numberOfOptions",
                            "u32"
                        ],
                        [
                            "pollStartTimestamp",
                            "Moment"
                        ],
                        [
                            "pollEndTimestamp",
                            "Moment"
                        ]
                    ]
                },
                "PoolData": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "multiplier",
                            "u32"
                        ],
                        [
                            "depositFee",
                            "Balance"
                        ],
                        [
                            "isCore",
                            "bool"
                        ],
                        [
                            "isFarm",
                            "bool"
                        ],
                        [
                            "totalTokensInPool",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "Balance"
                        ],
                        [
                            "rewardsToBeDistributed",
                            "Balance"
                        ],
                        [
                            "isRemoved",
                            "bool"
                        ]
                    ]
                },
                "PostDispatchInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "actualWeight",
                            "Option<Weight>"
                        ],
                        [
                            "paysFee",
                            "Pays"
                        ]
                    ]
                },
                "PredefinedAssetId": {
                    "type": "enum",
                    "value_list": [
                        "XOR",
                        "DOT",
                        "KSM",
                        "USDT",
                        "VAL",
                        "PSWAP",
                        "DAI",
                        "ETH",
                        "XSTUSD",
                        "XST"
                    ]
                },
                "PriceInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "priceFailures",
                            "u32"
                        ],
                        [
                            "spotPrices",
                            "Vec<Balance>"
                        ],
                        [
                            "averagePrice",
                            "Balance"
                        ],
                        [
                            "needsUpdate",
                            "bool"
                        ],
                        [
                            "lastSpotPrice",
                            "Balance"
                        ]
                    ]
                },
                "QuoteWithDesiredInput": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "desiredAmountIn",
                            "Balance"
                        ]
                    ]
                },
                "QuoteWithDesiredOutput": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "desiredAmountOut",
                            "Balance"
                        ]
                    ]
                },
                "RewardInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "limit",
                            "Balance"
                        ],
                        [
                            "totalAvailable",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "BTreeMap<RewardReason, Balance>"
                        ]
                    ]
                },
                "SwapWithDesiredInput": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "desiredAmountIn",
                            "Balance"
                        ],
                        [
                            "minAmountOut",
                            "Balance"
                        ]
                    ]
                },
                "SwapWithDesiredOutput": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "desiredAmountOut",
                            "Balance"
                        ],
                        [
                            "maxAmountIn",
                            "Balance"
                        ]
                    ]
                },
                "TeamVesting": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "teamVestingTotalTokens",
                            "Balance"
                        ],
                        [
                            "teamVestingFirstReleasePercent",
                            "Balance"
                        ],
                        [
                            "teamVestingPeriod",
                            "Moment"
                        ],
                        [
                            "teamVestingPercent",
                            "Balance"
                        ]
                    ]
                },
                "TechTradingPair": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "baseAssetId",
                            "TechAssetId"
                        ],
                        [
                            "targetAssetId",
                            "TechAssetId"
                        ]
                    ]
                },
                "TokenInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "farmsTotalMultiplier",
                            "u32"
                        ],
                        [
                            "stakingTotalMultiplier",
                            "u32"
                        ],
                        [
                            "tokenPerBlock",
                            "Balance"
                        ],
                        [
                            "farmsAllocation",
                            "Balance"
                        ],
                        [
                            "stakingAllocation",
                            "Balance"
                        ],
                        [
                            "teamAllocation",
                            "Balance"
                        ],
                        [
                            "teamAccount",
                            "AccountId"
                        ]
                    ]
                },
                "TokenLockInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "tokens",
                            "Balance"
                        ],
                        [
                            "unlockingTimestamp",
                            "Moment"
                        ],
                        [
                            "assetId",
                            "AssetId"
                        ]
                    ]
                },
                "TradingPair": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "baseAssetId",
                            "AssetId"
                        ],
                        [
                            "targetAssetId",
                            "AssetId"
                        ]
                    ]
                },
                "UserInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "poolAsset",
                            "AssetId"
                        ],
                        [
                            "rewardAsset",
                            "AssetId"
                        ],
                        [
                            "isFarm",
                            "bool"
                        ],
                        [
                            "pooledTokens",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "Balance"
                        ]
                    ]
                },
                "VotingInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "votingOption",
                            "u32"
                        ],
                        [
                            "numberOfVotes",
                            "Balance"
                        ],
                        [
                            "ceresWithdrawn",
                            "bool"
                        ]
                    ]
                }
            }
        },
        {
            "runtime_range": [
                45,
                null
            ],
            "types": {
                "PredefinedAssetId": {
                    "type": "enum",
                    "value_list": [
                        "XOR",
                        "DOT",
                        "KSM",
                        "USDT",
                        "VAL",
                        "PSWAP",
                        "DAI",
                        "ETH",
                        "XSTUSD",
                        "XST",
                        "TBCD"
                    ]
                }
            }
        },
        {
            "runtime_range": [
                47,
                null
            ],
            "types": {
                "HermesPollInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "creator",
                            "AccountId"
                        ],
                        [
                            "hermesLocked",
                            "Balance"
                        ],
                        [
                            "pollStartTimestamp",
                            "Moment"
                        ],
                        [
                            "pollEndTimestamp",
                            "Moment"
                        ],
                        [
                            "title",
                            "String"
                        ],
                        [
                            "description",
                            "String"
                        ],
                        [
                            "creatorHermesWithdrawn",
                            "bool"
                        ]
                    ]
                },
                "HermesVotingInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "votingOption",
                            "VotingOption"
                        ],
                        [
                            "numberOfHermes",
                            "Balance"
                        ],
                        [
                            "hermesWithdrawn",
                            "bool"
                        ]
                    ]
                },
                "ILOInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "iloOrganizer",
                            "AccountId"
                        ],
                        [
                            "tokensForIlo",
                            "Balance"
                        ],
                        [
                            "tokensForLiquidity",
                            "Balance"
                        ],
                        [
                            "iloPrice",
                            "Balance"
                        ],
                        [
                            "softCap",
                            "Balance"
                        ],
                        [
                            "hardCap",
                            "Balance"
                        ],
                        [
                            "minContribution",
                            "Balance"
                        ],
                        [
                            "maxContribution",
                            "Balance"
                        ],
                        [
                            "refundType",
                            "bool"
                        ],
                        [
                            "liquidityPercent",
                            "Balance"
                        ],
                        [
                            "listingPrice",
                            "Balance"
                        ],
                        [
                            "lockupDays",
                            "u32"
                        ],
                        [
                            "startTimestamp",
                            "Moment"
                        ],
                        [
                            "endTimestamp",
                            "Moment"
                        ],
                        [
                            "contributorsVesting",
                            "ContributorsVesting"
                        ],
                        [
                            "teamVesting",
                            "TeamVesting"
                        ],
                        [
                            "soldTokens",
                            "Balance"
                        ],
                        [
                            "fundsRaised",
                            "Balance"
                        ],
                        [
                            "succeeded",
                            "bool"
                        ],
                        [
                            "failed",
                            "bool"
                        ],
                        [
                            "lpTokens",
                            "Balance"
                        ],
                        [
                            "claimedLpTokens",
                            "bool"
                        ],
                        [
                            "finishTimestamp",
                            "Moment"
                        ],
                        [
                            "baseAsset",
                            "AssetId"
                        ]
                    ]
                },
                "PoolData": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "multiplier",
                            "u32"
                        ],
                        [
                            "depositFee",
                            "Balance"
                        ],
                        [
                            "isCore",
                            "bool"
                        ],
                        [
                            "isFarm",
                            "bool"
                        ],
                        [
                            "totalTokensInPool",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "Balance"
                        ],
                        [
                            "rewardsToBeDistributed",
                            "Balance"
                        ],
                        [
                            "isRemoved",
                            "bool"
                        ],
                        [
                            "baseAsset",
                            "AssetId"
                        ]
                    ]
                },
                "UserInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "poolAsset",
                            "AssetId"
                        ],
                        [
                            "rewardAsset",
                            "AssetId"
                        ],
                        [
                            "isFarm",
                            "bool"
                        ],
                        [
                            "pooledTokens",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "Balance"
                        ],
                        [
                            "baseAsset",
                            "AssetId"
                        ]
                    ]
                },
                "VotingOption": {
                    "type": "enum",
                    "value_list": [
                        "Yes",
                        "No"
                    ]
                },
                "LPSwapOutcomeInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "amount",
                            "Balance"
                        ],
                        [
                            "fee",
                            "Balance"
                        ],
                        [
                            "rewards",
                            "Vec<LPRewardsInfo>"
                        ],
                        [
                            "route",
                            "Vec<AssetId>"
                        ]
                    ]
                }
            }
        },
        {
            "runtime_range": [
                52,
                null
            ],
            "types": {
                "AppKind": {
                    "type": "enum",
                    "value_list": [
                        "EthApp",
                        "ERC20App",
                        "SidechainApp",
                        "SubstrateApp"
                    ]
                },
                "AppsWithSupportedAssets": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "apps",
                            "Vec<BridgeAppInfo>"
                        ],
                        [
                            "assets",
                            "Vec<BridgeAssetInfo<AssetId>>"
                        ]
                    ]
                },
                "BridgeAppInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "evmAddress",
                            "H160"
                        ],
                        [
                            "appKind",
                            "AppKind"
                        ]
                    ]
                },
                "BridgeAssetInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "assetId",
                            "AssetId"
                        ],
                        [
                            "evmAddress",
                            "Option<H160>"
                        ],
                        [
                            "appKind",
                            "AppKind"
                        ]
                    ]
                },
                "EVMChainId": "U256"
            }
        },
        {
            "runtime_range": [
                54,
                null
            ],
            "types": {
                "BridgeAppInfo": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "EVM",
                            "(GenericNetworkId, EVMAppInfo)"
                        ],
                        [
                            "Sub",
                            "(GenericNetworkId)"
                        ]
                    ]
                },
                "BridgeAssetInfo": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "EVMLegacy",
                            "EVMLegacyAssetInfo"
                        ],
                        [
                            "EVM",
                            "EVMAssetInfo"
                        ],
                        [
                            "Sub",
                            "SubAssetInfo"
                        ]
                    ]
                },
                "EVMAppInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "evmAddress",
                            "H160"
                        ],
                        [
                            "appKind",
                            "EVMAppKind"
                        ]
                    ]
                },
                "EVMAppKind": {
                    "type": "enum",
                    "value_list": [
                        "EthApp",
                        "ERC20App",
                        "SidechainApp",
                        "HashiBridge",
                        "XorMaster",
                        "ValMaster"
                    ]
                },
                "EVMAssetInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "assetId",
                            "MainnetAssetId"
                        ],
                        [
                            "evmAddress",
                            "H160"
                        ],
                        [
                            "appKind",
                            "EVMAppKind"
                        ],
                        [
                            "precision",
                            "u8"
                        ]
                    ]
                },
                "EVMLegacyAssetInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "assetId",
                            "MainnetAssetId"
                        ],
                        [
                            "evmAddress",
                            "H160"
                        ],
                        [
                            "appKind",
                            "EVMAppKind"
                        ],
                        [
                            "precision",
                            "u8"
                        ]
                    ]
                },
                "GenericNetworkId": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "EVMLegacy",
                            "u32"
                        ],
                        [
                            "EVM",
                            "EVMChainId"
                        ],
                        [
                            "Sub",
                            "SubNetworkId"
                        ]
                    ]
                },
                "LiquiditySourceType": {
                    "type": "enum",
                    "value_list": [
                        "XYKPool",
                        "BondingCurvePool",
                        "MulticollateralBondingCurvePool",
                        "MockPool",
                        "MockPool2",
                        "MockPool3",
                        "MockPool4",
                        "XSTPool",
                        "OrderBook"
                    ]
                },
                "MainnetAssetId": "H256",
                "SubAssetInfo": {
                    "type": "struct",
                    "type_mapping": [
                        [
                            "assetId",
                            "MainnetAssetId"
                        ],
                        [
                            "assetKind",
                            "SubAssetKind"
                        ],
                        [
                            "precision",
                            "u8"
                        ]
                    ]
                },
                "SubAssetKind": {
                    "type": "enum",
                    "value_list": [
                        "Thischain",
                        "Sidechain"
                    ]
                },
                "SubNetworkId": {
                    "type": "enum",
                    "type_mapping": [
                        [
                            "Mainnet",
                            null
                        ],
                        [
                            "Kusama",
                            null
                        ],
                        [
                            "Polkadot",
                            null
                        ],
                        [
                            "Rococo",
                            null
                        ],
                        [
                            "Custom",
                            "u32"
                        ]
                    ]
                }
            }
        }
    ],
    "runtime_upgrades": [
        [
            0,
            1
        ],
        [
            12210,
            2
        ],
        [
            28959,
            3
        ],
        [
            105369,
            4
        ],
        [
            663113,
            5
        ],
        [
            789225,
            6
        ],
        [
            1043192,
            8
        ],
        [
            1374881,
            9
        ],
        [
            1908443,
            10
        ],
        [
            1961693,
            11
        ],
        [
            2076491,
            12
        ],
        [
            2240075,
            13
        ],
        [
            2352856,
            14
        ],
        [
            2382337,
            15
        ],
        [
            2455618,
            16
        ],
        [
            2484057,
            17
        ],
        [
            2486688,
            18
        ],
        [
            2495810,
            19
        ],
        [
            2998701,
            20
        ],
        [
            3401067,
            21
        ],
        [
            3450465,
            22
        ],
        [
            3643432,
            23
        ],
        [
            3887922,
            25
        ],
        [
            3945349,
            26
        ],
        [
            4045321,
            27
        ],
        [
            4072409,
            28
        ],
        [
            4092409,
            29
        ],
        [
            4103060,
            30
        ]
    ]
}